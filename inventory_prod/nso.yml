all:
  vars:
    nso_default_ned: cisco-ios-cli-6.87
#############################################################################################################
## If you are running the ansible playbooks to deploy nso into CML, you can uncomment the lines below.     ##
## If you already have an instance of NSO running with the OC service installed, you can skip to modifying ##
## the variables starting with nos_rest_url:                                                               ##
#############################################################################################################
    mdd_model_repos:
      - name: nso-oc-services
        model_list:
          - mdd
# Add the URLs to your NSO installer file and NSO NED files. We recommened using an S3 bucket or easily accessible storage.
    nso_installer_file: 
    nso_ned_files:
# The current package below has been tested against the reference architeture.
# You can use the repo link to see the latest version and modify the version variable.
    nso_package_repos:
      - name: mdd
        repo: https://github.com/model-driven-devops/nso-oc-services.git
        version: v2.35.8
        service_list:
          - mdd
# Input the URL to your production NSO instance below
    nso_rest_url:
# Input the username for your production NSO instance below
    nso_username: 
# The authgroup defines the username and password NSO uses to connect to devices.
# Set the device remote_name here. The password will be set as an environment variable.
    nso_auth_groups:
      default:
        remote_name: 
        remote_password: "{{ lookup('env', 'PROD_REMOTE_PASSWORD') | default('admin', true) }}"        
  children:
    nso:
      vars:
        ansible_user: "{{ lookup('env', 'NSO_USERNAME') | default('ubuntu', true) }}"
        ansible_password: "{{ lookup('env', 'NSO_PASSWORD') | default('admin', true) }}"
        ansible_python_interpreter: /usr/bin/python3
      hosts:
        nso1:
